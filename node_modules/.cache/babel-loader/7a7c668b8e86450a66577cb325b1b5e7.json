{"ast":null,"code":"var _jsxFileName = \"/Users/helentsai/hungry-alarm/src/components/reservation/customerReservation.js\";\nimport React, { Component } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios';\nimport Card from './reservationCard';\nimport HistoryCard from './historyReservCard';\nexport default class customerReservation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reservations: []\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.usertoken;\n    const decoded = jwt_decode(token);\n    const customerID = decoded.id;\n    axios.get('http://localhost:5000/reservation/customer/' + customerID).then(response => {\n      // console.log(response.data)\n      const reservation = response.data;\n      this.setState({\n        reservations: reservation\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  ReservationList() {\n    var today = new Date(); // console.log(today.getTime())\n\n    return this.state.reservations.map(reservation => {\n      var reservday = new Date(reservation.date); // console.log(reservday.getTime())\n\n      if (today < reservday) {\n        return React.createElement(Card, {\n          deletereservation: this.deletereservation,\n          key: reservation.rid,\n          reservation: reservation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      }\n    });\n  }\n\n  HistoryList() {\n    var today = new Date(); // console.log(today.getTime())\n\n    return this.state.reservations.map(reservation => {\n      var reservday = new Date(reservation.date); // console.log(reservday.getTime())\n\n      if (today > reservday) {\n        return React.createElement(HistoryCard, {\n          key: reservation.rid,\n          reservation: reservation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        });\n      }\n    });\n  }\n\n  deletereservation(res_id, rid) {\n    // console.log(res_id)\n    // console.log(rid)\n    // here might have a bug in the furture since the date and time should be cancal and release for other booking\n    const reservationupdate = {\n      cid: 0,\n      rid: rid,\n      // date: \"000\",\n      // time: \"000\",\n      seats: 0,\n      notes: null,\n      rating: null,\n      comment: null\n    };\n    axios.put('http://localhost:5000/reservation/update/' + res_id, reservationupdate).then(res => {\n      console.log(res.data);\n      window.location.reload();\n    }); // axios.delete('http://localhost:5000/reservation/cancel/'+res_id )\n    // .then(res => {\n    //     console.log(res.data);\n    //     window.location.reload();\n    // })\n    // .catch(err =>{\n    //     console.log(err)\n    // })\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        \"margin\": \"0% 5% 0% 5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \" \", this.ReservationList()), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Booking history\"), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      style: {\n        fontSize: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Restaurant\"), React.createElement(\"th\", {\n      style: {\n        fontSize: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"visited date\"), React.createElement(\"th\", {\n      style: {\n        fontSize: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"rating\"), React.createElement(\"th\", {\n      style: {\n        fontSize: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"comment\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.HistoryList())));\n  }\n\n}","map":{"version":3,"sources":["/Users/helentsai/hungry-alarm/src/components/reservation/customerReservation.js"],"names":["React","Component","jwt_decode","axios","Card","HistoryCard","customerReservation","constructor","props","state","reservations","componentDidMount","token","localStorage","usertoken","decoded","customerID","id","get","then","response","reservation","data","setState","catch","error","console","log","ReservationList","today","Date","map","reservday","date","deletereservation","rid","HistoryList","res_id","reservationupdate","cid","seats","notes","rating","comment","put","res","window","location","reload","render","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios';\nimport Card from './reservationCard';\nimport HistoryCard from './historyReservCard'\n\n\n\n\nexport default class customerReservation extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            reservations: []\n        }\n    }\n\n    componentDidMount() {\n\n        const token = localStorage.usertoken\n        const decoded = jwt_decode(token)\n        const customerID = decoded.id\n\n        axios.get('http://localhost:5000/reservation/customer/' + customerID)\n            .then(response => {\n                // console.log(response.data)\n                const reservation = response.data\n                this.setState({ reservations: reservation });\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }\n\n\n\n\n    ReservationList() {\n        var today = new Date();\n        // console.log(today.getTime())\n\n        return this.state.reservations.map(reservation => {\n            var reservday = new Date(reservation.date);\n            // console.log(reservday.getTime())\n            if (today < reservday) {\n                return <Card deletereservation={this.deletereservation} key={reservation.rid} reservation={reservation} />\n            }\n\n        })\n    }\n\n    HistoryList() {\n        var today = new Date();\n        // console.log(today.getTime())\n\n        return this.state.reservations.map(reservation => {\n            var reservday = new Date(reservation.date);\n            // console.log(reservday.getTime())\n            if (today > reservday) {\n                return <HistoryCard key={reservation.rid} reservation={reservation} />\n            }\n\n        })\n    }\n\n    deletereservation(res_id, rid) {\n\n        // console.log(res_id)\n        // console.log(rid)\n        // here might have a bug in the furture since the date and time should be cancal and release for other booking\n        const reservationupdate = {\n            cid: 0,\n            rid: rid,\n            // date: \"000\",\n            // time: \"000\",\n            seats: 0,\n            notes: null,\n            rating: null,\n            comment: null,\n        }\n        axios.put('http://localhost:5000/reservation/update/' + res_id, reservationupdate)\n            .then(res => {\n                console.log(res.data)\n                window.location.reload();\n            });\n        // axios.delete('http://localhost:5000/reservation/cancel/'+res_id )\n        // .then(res => {\n        //     console.log(res.data);\n        //     window.location.reload();\n        // })\n        // .catch(err =>{\n        //     console.log(err)\n        // })\n    }\n\n\n\n    render() {\n        return (\n\n            <div style={{ \"margin\": \"0% 5% 0% 5%\" }}>\n                <div> {this.ReservationList()}</div>\n                <h5>Booking history</h5>\n                <table className=\"table\">\n                    <thead className=\"thead-light\">\n                        <tr>\n                            <th style={{ fontSize: \"10px\" }}>Restaurant</th>\n                            <th style={{ fontSize: \"10px\" }}>visited date</th>\n                            <th style={{ fontSize: \"10px\" }}>rating</th>\n                            <th style={{ fontSize: \"10px\" }}>comment</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.HistoryList()}\n                    </tbody>\n                </table>\n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}